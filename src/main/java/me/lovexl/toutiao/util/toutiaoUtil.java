package me.lovexl.toutiao.util;
import com.alibaba.fastjson.JSONObject;
import me.lovexl.toutiao.controller.LoginController;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import javax.swing.*;
import java.math.BigInteger;
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;
import java.util.Map;

public class toutiaoUtil {
    //日志获取
    private final Logger logger = LoggerFactory.getLogger(LoginController.class);
    public static String IMAGE_DIR = "C:\\upload\\";
    public static  String TOUTIAO_DOMAIN ="localhost:8080";
    public static String QINIU_DOMAIN_PREFIX="http://pngmv7ahn.bkt.clouddn.com/";
    public static String[] IMAGE_FILE_EXT= new String[]{"png","bmp","jpg","jpeg"};
    public static boolean isFileAllowed(String filename){
        for(String ext: IMAGE_FILE_EXT){
            if (ext.equals(filename))
                return true;
        }
        return false;
    }


    //json来获取服务器返回状态
    public static String getJSONString(int code){
        JSONObject json = new JSONObject();
        json.put("code",code);
        return json.toJSONString();
    }
    public static String getJSONString(int code,String msg){
        JSONObject json = new JSONObject();
        json.put("code",code);
        json.put("msg",msg);
        return json.toJSONString();
    }
    public static String getJSONString(int code, Map<String,Object> map){
        JSONObject json = new JSONObject();
        json.put("code",code);
        for(Map.Entry<String,Object> entry:map.entrySet()){
            json.put(entry.getKey(),entry.getValue());
        }
        return json.toJSONString();
    }


    // Java program to calculate MD5 hash value
        public static String getMd5(String input)
        {
            try {
                // Static getInstance method is called with hashing MD5
                MessageDigest md = MessageDigest.getInstance("MD5");

                // digest() method is called to calculate message digest
                //  of an input digest() return array of byte
                byte[] messageDigest = md.digest(input.getBytes());

                // Convert byte array into signum representation
                BigInteger no = new BigInteger(1, messageDigest);

                // Convert message digest into hex value
                String hashtext = no.toString(16);
                while (hashtext.length() < 32) {
                    hashtext = "0" + hashtext;
                }
                return hashtext;
            }

            // For specifying wrong message digest algorithms
            catch (NoSuchAlgorithmException e) {
                throw new RuntimeException(e);
            }
        }

        // Driver code
        public static void main(String args[]) throws NoSuchAlgorithmException
        {
            String s = "GeeksForGeeks";
            System.out.println("Your HashCode Generated by MD5 is: " + getMd5(s));
        }
}
